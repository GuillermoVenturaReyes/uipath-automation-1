<Activity mc:Ignorable="sap sap2010" x:Class="ProduceEmail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_EmailTemplate" Type="InArgument(x:String)" />
    <x:Property Name="in_EmailCustomMessage" Type="InArgument(x:String)" />
    <x:Property Name="in_GoogleFormLink" Type="InArgument(x:String)" />
    <x:Property Name="out_EmailBody" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="This optional argument refers to a signature for the end of the email, if required." Name="in_OptionalSignature" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>827.333333333333,2270</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProduceEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="54">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow produces the body of an email by aggregating other components. The workflow takes in String arguments for the email template, a custom message, and optionally a GoogleForm and a signature. It then produces an out argument representing the joined, single String that represents the body of an email to be sent.&#xA;&#xA;This workflow throws a NullReferenceException if any non-optional argument is null, to prevent the email from being only partially constructed." DisplayName="ProduceEmailFromInput" sap:VirtualizedContainerService.HintSize="562.666666666667,2205.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="EmailComponents" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="520.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Producing email body from components...&quot;]" />
    <If Condition="[IsNothing(in_EmailTemplate) AndAlso IsNothing(in_EmailCustomMessage)]" sap:VirtualizedContainerService.HintSize="520.666666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Throw Exception="[new NullReferenceException(&quot;One of the components of the email being produced was null. All non-optional arguments should be configured.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
      </If.Then>
    </If>
    <Assign DisplayName="Assign - Empty List of Email parts " sap:VirtualizedContainerService.HintSize="520.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[EmailComponents]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[in_EmailTemplate isnot nothing]" DisplayName="If - EmailTemplate arg is not null" sap:VirtualizedContainerService.HintSize="520.666666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <AddToCollection x:TypeArguments="x:String" Collection="[EmailComponents]" DisplayName="Add Template To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[in_EmailTemplate]" />
      </If.Then>
    </If>
    <If Condition="[in_EmailCustomMessage isnot nothing]" DisplayName="If - CustomMessage arg is not null" sap:VirtualizedContainerService.HintSize="520.666666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <AddToCollection x:TypeArguments="x:String" Collection="[EmailComponents]" DisplayName="Add CustomMessage To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[in_EmailCustomMessage]" />
      </If.Then>
    </If>
    <AddToCollection x:TypeArguments="x:String" Collection="[EmailComponents]" DisplayName="Add GoogleFormPrompt To Collection" sap:VirtualizedContainerService.HintSize="520.666666666667,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[in_Config(&quot;GoogleFormPrompt&quot;).ToString]" />
    <AddToCollection x:TypeArguments="x:String" Collection="[EmailComponents]" DisplayName="Add GoogleFormLink To Collection" sap:VirtualizedContainerService.HintSize="520.666666666667,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[in_GoogleFormLink]" />
    <If Condition="[in_OptionalSignature isnot nothing]" DisplayName="If - OptionalSignature arg is not null" sap:VirtualizedContainerService.HintSize="520.666666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <AddToCollection x:TypeArguments="x:String" Collection="[EmailComponents]" DisplayName="Add Signature To Email Components" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[in_OptionalSignature]" />
      </If.Then>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Component in EmailComponents List" sap:VirtualizedContainerService.HintSize="520.666666666667,383.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[EmailComponents]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="component" />
          </ActivityAction.Argument>
          <If Condition="[component is nothing]" DisplayName="If - Email component is nothing/null" sap:VirtualizedContainerService.HintSize="484,244.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Throw Exception="[new NullReferenceException(&quot;One of the components of the email being produced was null. All non-optional arguments should be configured.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Then>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign DisplayName="Assign - Completed Email body" sap:VirtualizedContainerService.HintSize="520.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_EmailBody]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Join(vbNewline+vbNewLine, EmailComponents)]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>